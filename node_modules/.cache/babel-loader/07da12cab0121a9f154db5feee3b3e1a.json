{"ast":null,"code":"var _jsxFileName = \"/Users/leshlyerivera/Documents/GitHub/portfolio/src/components/projectGrid/index.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport Image from 'material-ui-image';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport IconButton from '@material-ui/core/IconButton';\nimport InfoIcon from '@material-ui/icons/Info';\nimport tileData from '../tileData/tileData';\nimport Link from '@material-ui/core/Link';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    backgroundColor: \"#313333\"\n  },\n  gridList: {\n    width: 800,\n    height: \"auto\"\n  },\n  icon: {\n    color: 'rgba(255, 255, 255, 0.54)'\n  }\n}));\nexport default function TitlebarGridList() {\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(GridList, {\n    cellHeight: 180,\n    className: classes.gridList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(GridListTile, {\n    key: \"Subheader\",\n    cols: 2,\n    style: {\n      height: 'auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ListSubheader, {\n    component: \"div\",\n    style: {\n      color: \"white\",\n      fontSize: \"large\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }\n  }, \"PROJECTS 2020\")), tileData.map(tile => /*#__PURE__*/React.createElement(GridListTile, {\n    key: tile.img,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    src: tile.img,\n    alt: tile.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(GridListTileBar, {\n    title: tile.title,\n    subtitle: /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 39\n      }\n    }, \"Desc: \", tile.details),\n    actionIcon: /*#__PURE__*/React.createElement(Link, {\n      href: tile.reference,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      \"aria-label\": `info about ${tile.title}`,\n      className: classes.icon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(InfoIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 37\n      }\n    }))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 25\n    }\n  })))));\n}","map":{"version":3,"sources":["/Users/leshlyerivera/Documents/GitHub/portfolio/src/components/projectGrid/index.js"],"names":["React","makeStyles","GridList","Image","GridListTile","GridListTileBar","ListSubheader","IconButton","InfoIcon","tileData","Link","useStyles","theme","root","display","flexWrap","justifyContent","overflow","backgroundColor","gridList","width","height","icon","color","TitlebarGridList","classes","fontSize","map","tile","img","title","details","reference"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport Image from 'material-ui-image';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport IconButton from '@material-ui/core/IconButton';\nimport InfoIcon from '@material-ui/icons/Info';\nimport tileData from '../tileData/tileData';\nimport Link from '@material-ui/core/Link';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-around',\n        overflow: 'hidden',\n        backgroundColor: \"#313333\",\n    },\n    gridList: {\n        width: 800,\n        height: \"auto\",\n    },\n    icon: {\n        color: 'rgba(255, 255, 255, 0.54)',\n    },\n}));\n\nexport default function TitlebarGridList() {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <GridList  cellHeight={180} className={classes.gridList}>\n                <GridListTile key=\"Subheader\" cols={2} style={{ height: 'auto' }}>\n                    <ListSubheader component=\"div\" style={{color:\"white\",fontSize:\"large\"}}>PROJECTS 2020</ListSubheader>\n                </GridListTile>\n                {tileData.map((tile) => (\n                    <GridListTile key={tile.img}>\n                        <Image src={tile.img} alt={tile.title} />\n                        <GridListTileBar\n                            title={tile.title}\n                            subtitle={<span>Desc: {tile.details}</span>}\n                            actionIcon={\n                                <Link href ={tile.reference}>\n                                <IconButton aria-label={`info about ${tile.title}`} className={classes.icon}>\n                                    <InfoIcon />\n                                </IconButton>\n                                </Link>\n                            }\n                        />\n                    </GridListTile>\n                ))}\n            </GridList>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}